{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sm91w\\\\development\\\\Homework19\\\\employee-directory\\\\src\\\\components\\\\employeeTable.js\";\nimport React from 'react';\n\nfunction Employeetable(props) {\n  console.log(props);\n\n  const handleSort = sort => {\n    switch (sort) {\n      case \"name\":\n        function sortName() {\n          const sortedEmployees = props.employees.sort(function (a, b) {\n            if (a.name.first < b.name.first) {\n              return -1;\n            } else {\n              return 1;\n            }\n          });\n          props.employees = sortedEmployees;\n        }\n\n        sortName(sort);\n        break;\n      // case \"age\":\n      //     sortAge()\n      //     break\n\n      default:\n        console.log(\"Error\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, props.headings.map((heading, i) => /*#__PURE__*/React.createElement(\"th\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSort(\"name\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 34\n    }\n  }, heading && heading.name ? heading.name : /*#__PURE__*/React.createElement(React.Fragment, null))))), props.employees.map((employee, i) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, employee && employee.name ? employee.name.first + \" \" + employee.name.last : /*#__PURE__*/React.createElement(React.Fragment, null)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, employee.picture ? /*#__PURE__*/React.createElement(\"img\", {\n    src: employee.picture.thumbnail,\n    alt: \"profile picture\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 31\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }, employee.cell ? employee.cell : /*#__PURE__*/React.createElement(React.Fragment, null)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }, employee.email ? employee.email : /*#__PURE__*/React.createElement(React.Fragment, null)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }, employee && employee.dob ? JSON.stringify(employee.dob).slice(9, -25) : /*#__PURE__*/React.createElement(React.Fragment, null))))));\n}\n\nexport default Employeetable;","map":{"version":3,"sources":["C:/Users/sm91w/development/Homework19/employee-directory/src/components/employeeTable.js"],"names":["React","Employeetable","props","console","log","handleSort","sort","sortName","sortedEmployees","employees","a","b","name","first","headings","map","heading","i","employee","last","picture","thumbnail","cell","email","dob","JSON","stringify","slice"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AAEA,QAAMG,UAAU,GAAIC,IAAD,IAAU;AACzB,YAAQA,IAAR;AACE,WAAK,MAAL;AACE,iBAASC,QAAT,GAAoB;AACnB,gBAAMC,eAAe,GAAGN,KAAK,CAACO,SAAN,CAAgBH,IAAhB,CAAqB,UAAUI,CAAV,EAAaC,CAAb,EAAgB;AAC1D,gBAAID,CAAC,CAACE,IAAF,CAAOC,KAAP,GAAeF,CAAC,CAACC,IAAF,CAAOC,KAA1B,EAAiC;AAC/B,qBAAO,CAAC,CAAR;AACD,aAFD,MAEO;AACL,qBAAO,CAAP;AACD;AAEF,WAPsB,CAAxB;AAQCX,UAAAA,KAAK,CAACO,SAAN,GAAkBD,eAAlB;AACD;;AACDD,QAAAA,QAAQ,CAACD,IAAD,CAAR;AACA;AACF;AACA;AACA;;AACA;AACEH,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AAnBJ;AAsBD,GAvBH;;AAwBA,sBAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,KAAK,CAACY,QAAN,CAAeC,GAAf,CAAmB,CAACC,OAAD,EAAUC,CAAV,kBACpB;AAAI,IAAA,GAAG,EAAGA,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAa;AACT,IAAA,OAAO,EAAEZ,UAAU,CAAC,MAAD,CADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAERW,OAAO,IAAIA,OAAO,CAACJ,IAAnB,GACAI,OAAO,CAACJ,IADR,gBAEA,yCAJQ,CAAb,CADC,CADL,CADJ,EAYSV,KAAK,CAACO,SAAN,CAAgBM,GAAhB,CAAoB,CAAEG,QAAF,EAAYD,CAAZ,kBACrB;AAAI,IAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,QAAQ,IAAIA,QAAQ,CAACN,IAArB,GACCM,QAAQ,CAACN,IAAT,CAAcC,KAAd,GAAsB,GAAtB,GAA4BK,QAAQ,CAACN,IAAT,CAAcO,IAD3C,gBAEC,yCAHN,CADJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,QAAQ,CAACE,OAAT,gBACC;AAAK,IAAA,GAAG,EAAEF,QAAQ,CAACE,OAAT,CAAiBC,SAA3B;AAAsC,IAAA,GAAG,EAAC,iBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,gBAEC,yCAHN,CANJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,QAAQ,CAACI,IAAT,GACCJ,QAAQ,CAACI,IADV,gBAEA,yCAHL,CAXJ,eAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,QAAQ,CAACK,KAAT,GACCL,QAAQ,CAACK,KADV,gBAEC,yCAHN,CAhBJ,eAqBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,QAAQ,IAAIA,QAAQ,CAACM,GAArB,GACCC,IAAI,CAACC,SAAL,CAAgBR,QAAQ,CAACM,GAAzB,EAA+BG,KAA/B,CAAqC,CAArC,EAAuC,CAAC,EAAxC,CADD,gBAEC,yCAHN,CArBJ,CADC,CAZT,CADJ,CAHJ;AAkDH;;AAED,eAAe1B,aAAf","sourcesContent":["import React from 'react';\r\n\r\nfunction Employeetable(props) {\r\n    console.log(props);\r\n\r\n    const handleSort = (sort) => {\r\n        switch (sort) {\r\n          case \"name\":\r\n            function sortName (){\r\n             const sortedEmployees = props.employees.sort(function (a, b) {\r\n                if (a.name.first < b.name.first) {\r\n                  return -1;\r\n                } else {\r\n                  return 1;\r\n                }\r\n    \r\n              });\r\n              props.employees = sortedEmployees;\r\n            }\r\n            sortName(sort);\r\n            break;\r\n          // case \"age\":\r\n          //     sortAge()\r\n          //     break\r\n          default:\r\n            console.log(\"Error\");\r\n        }\r\n        \r\n      };\r\n    return(\r\n\r\n    \r\n        <table>\r\n            <tbody>\r\n                <tr>\r\n                    {props.headings.map((heading, i) => \r\n                    <th key ={i}><button \r\n                        onClick={handleSort(\"name\")}>\r\n                        {heading && heading.name\r\n                        ?heading.name\r\n                        :<></>}\r\n                        </button>\r\n                    </th>)}\r\n                    \r\n                </tr>\r\n                    {props.employees.map(( employee, i ) =>\r\n                    <tr key={i} >\r\n                        <td>\r\n                            {employee && employee.name\r\n                            ? employee.name.first + \" \" + employee.name.last\r\n                            : <></>}\r\n                        </td>\r\n                        <td>\r\n                            {employee.picture\r\n                            ? <img src={employee.picture.thumbnail} alt=\"profile picture\" />\r\n                            : <></>}\r\n                        </td>\r\n                        <td>\r\n                            {employee.cell\r\n                            ? employee.cell\r\n                            :<></>}\r\n                        </td>\r\n                        <td>\r\n                            {employee.email\r\n                            ? employee.email\r\n                            : <></>}\r\n                        </td>\r\n                        <td>\r\n                            {employee && employee.dob\r\n                            ? JSON.stringify((employee.dob)).slice(9,-25)\r\n                            : <></>\r\n                            }\r\n                        </td>\r\n\r\n                    </tr>)}\r\n            </tbody>\r\n        </table>\r\n    \r\n    )\r\n}\r\n\r\nexport default Employeetable;"]},"metadata":{},"sourceType":"module"}